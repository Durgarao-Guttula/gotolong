
1. Install python 3.7.4 from python.org

pip install pandas

pip install xlrd


2. python -m pip install --upgrade pip


D:\Google Drive\my_personal_pack\invest\Equity\icici-bank-txn-data\fy1617>

d:\> python "D:\Google Drive\my_github\GitHub\gotolong\src\dividend\excel_to_csv.py" OpTransactionHistory-fy1617.xls OpTransactionHistory-fy1617.csv 0

D:\Google Drive\my_personal_pack\invest\Equity\icici-bank-txn-data\fy1617>python -m pdb  "D:\Google Drive\my_github\GitHub\gotolong\src\dividend\excel_to_csv.py" OpTransactionHistory-fy1617.xls OpTransactionHistory-fy1617.csv 1


3.  Python with debugger

python -m pdb x.py

4. To introduce single quote and double quote. This is required in GIT BASH for 'Google Drive' as that is in path.

use r with """" (triple quotes) and can embed either single quote or double quote.

use r""" """

4. python : expand file names using * etc in the path.

import glob
glob.glob(path)

5. windows port
   5.1 use python x.py instead of /usr/bin/python in .py file.
   5.2 handle Google Drive with a space by renaming it to GoogleDrive otherwise GitBash and .py modules will continue to get confused.

6. Migration to 3.7 from 2.*
   6.1 The print has been converted to a function so print must be enclosed in () like print('hello')

7. dataframe tips
   7.1> exclude columns with NaN

# Keep only if Transaction Remarks column is not NA
df = df[df['Unnamed: 5'].notnull()]

7.2> exclude columns with special content
# first line is 'Transaction Date from' : case sensitive
df = df[df['Unnamed: 1'] != 'Transaction Date from']

7.3> drop first column (column with an index)
# remove first column (NaN before S.No) - axis 1 is column, 0 is row
df.drop(df.columns[0], axis=1, inplace=True)

7.4> drop last column
# remove last column : Balance (INR)
df = df.iloc[:, :-1]

7.5> set columns
# change columns from second line from top
df.columns = df.iloc[0]

8. arguments using argument specifier : argparse module

import argparse

parser = argparse.ArgumentParser(description='Process arguments')
# dest= not required as option itself is the destination in args
parser.add_argument('--out_type', default='out_plain', help='out_plain | out_csv')
parser.add_argument('--sort_type', default='sort_frequency', help='sort_frequency')
parser.add_argument('--summary_type', default='summary_yes|summary_no', help='summary_yes')
parser.add_argument('--debug_level', default='0', help='debug level 0|1|2|3', type=int, choices=[0, 1, 2, 3])
parser.add_argument('--dividend_file', nargs='+', dest='dividend_file', help='dividend file')
parser.add_argument('--bonus_file', nargs='+', dest='bonus_file', help='bonus file')

args = parser.parse_args()
# print(args)

program_name = sys.argv[0]

out_type= args.out_type
sort_type= args.sort_type
summary_type= args.summary_type
debug_level= args.debug_level
# use the argument as pattern
bonus_filenames = glob.glob(args.bonus_file[0])
dividend_filenames = glob.glob(args.dividend_file[0])

9.